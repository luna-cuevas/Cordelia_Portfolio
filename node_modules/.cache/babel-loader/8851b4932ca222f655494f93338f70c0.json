{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.I18n = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _PinConst = require('./PinConst');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar I18n = exports.I18n = function () {\n  _createClass(I18n, [{\n    key: 'lang',\n\n    /**\n     * @property\n     * @type {string} The currently set language\n     */\n    get: function get() {\n      return this._lang;\n    }\n    /**\n     * If the lang is supported (found has a key in Strings), set new lang.\n     * @property\n     * @param {string} _lang - the language code to set\n     */\n    ,\n    set: function set(lang) {\n      if (this.dictionary.hasOwnProperty(lang)) {\n        this._lang = lang;\n      }\n    }\n    /**\n     * @property\n     * @type {Object} map of languages and strings\n     */\n\n  }, {\n    key: 'dictionary',\n    get: function get() {\n      return this._dictionary;\n    }\n    /**\n     * @property\n     * @param  {object} dictionary\n     */\n    ,\n    set: function set(dictionary) {\n      this._dictionary = dictionary;\n    }\n    /**\n     * Create a new i18n class to translate strings\n     * @param {Object} dictionary\n     * @param {string} language Initial language for the dictionary\n     */\n\n  }]);\n\n  function I18n(dictionary, language) {\n    _classCallCheck(this, I18n);\n\n    this._lang = language || _PinConst.DEFAULT_LANGUAGE;\n    this._dictionary = dictionary;\n  }\n  /**\n   * This is a wrapper for translating strings. It provides simple\n   * interpolation via \"test $1 $2\". Each $index will be replaced\n   * with the argument at $index.\n   *\n   * @param {string} key - the string to translate\n   * @param {string} ...args - the list of arguments to use in interpolation\n   * @returns {string} the translated/interpolated string\n   */\n\n\n  _createClass(I18n, [{\n    key: 'translate',\n    value: function translate(key) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return this.dictionary[this.lang][key].replace(/\\$([1-9])/g, function (match, index) {\n        return args[index - 1] || match;\n      });\n    }\n  }]);\n\n  return I18n;\n}();\n\nvar singleton = new I18n(_PinConst.I18N_DICTIONARY, _PinConst.DEFAULT_LANGUAGE);\nexports.default = singleton;","map":{"version":3,"sources":["/Users/luna.c/Documents/code/Cordelia_Portfolio/node_modules/react-pinterest/lib/util/i18n.js"],"names":["Object","defineProperty","exports","value","I18n","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_PinConst","require","_classCallCheck","instance","TypeError","get","_lang","set","lang","dictionary","hasOwnProperty","_dictionary","language","DEFAULT_LANGUAGE","translate","_len","arguments","args","Array","_key","replace","match","index","singleton","I18N_DICTIONARY","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.I18n = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PinConst = require('./PinConst');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar I18n = exports.I18n = function () {\n    _createClass(I18n, [{\n        key: 'lang',\n\n\n        /**\n         * @property\n         * @type {string} The currently set language\n         */\n        get: function get() {\n            return this._lang;\n        }\n\n        /**\n         * If the lang is supported (found has a key in Strings), set new lang.\n         * @property\n         * @param {string} _lang - the language code to set\n         */\n        ,\n        set: function set(lang) {\n            if (this.dictionary.hasOwnProperty(lang)) {\n                this._lang = lang;\n            }\n        }\n\n        /**\n         * @property\n         * @type {Object} map of languages and strings\n         */\n\n    }, {\n        key: 'dictionary',\n        get: function get() {\n            return this._dictionary;\n        }\n\n        /**\n         * @property\n         * @param  {object} dictionary\n         */\n        ,\n        set: function set(dictionary) {\n            this._dictionary = dictionary;\n        }\n\n        /**\n         * Create a new i18n class to translate strings\n         * @param {Object} dictionary\n         * @param {string} language Initial language for the dictionary\n         */\n\n    }]);\n\n    function I18n(dictionary, language) {\n        _classCallCheck(this, I18n);\n\n        this._lang = language || _PinConst.DEFAULT_LANGUAGE;\n        this._dictionary = dictionary;\n    }\n\n    /**\n     * This is a wrapper for translating strings. It provides simple\n     * interpolation via \"test $1 $2\". Each $index will be replaced\n     * with the argument at $index.\n     *\n     * @param {string} key - the string to translate\n     * @param {string} ...args - the list of arguments to use in interpolation\n     * @returns {string} the translated/interpolated string\n     */\n\n\n    _createClass(I18n, [{\n        key: 'translate',\n        value: function translate(key) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            return this.dictionary[this.lang][key].replace(/\\$([1-9])/g, function (match, index) {\n                return args[index - 1] || match;\n            });\n        }\n    }]);\n\n    return I18n;\n}();\n\nvar singleton = new I18n(_PinConst.I18N_DICTIONARY, _PinConst.DEFAULT_LANGUAGE);\n\nexports.default = singleton;"]},"metadata":{},"sourceType":"script"}