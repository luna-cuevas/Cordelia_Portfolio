{"ast":null,"code":"var _jsxFileName = \"/Users/luna.c/Documents/code/Cordelia_Portfolio/src/components/ProjectSection/CarouselVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport { PropTypes } from 'prop-types';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_VIDEOS = [{\n  _id: '5fd025a181e2c80897c14ae1',\n  videoUrl: 'https://www.youtube.com/embed/AVn-Yjr7kDc'\n}];\nconst useStyles = makeStyles(theme => ({\n  carousel: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst YoutubeSlide = ({\n  url,\n  isSelected\n}) => /*#__PURE__*/_jsxDEV(ReactPlayer, {\n  width: \"100%\",\n  height: \"276px\",\n  url: url,\n  playing: isSelected\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this);\n\n_c = YoutubeSlide;\n\nconst CarouselVideo = ({\n  data\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const customRenderItem = (item, props) => /*#__PURE__*/_jsxDEV(item.type, { ...item.props,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n\n  const getVideoThumb = videoId => `https://img.youtube.com/vi/${videoId}/default.jpg`;\n\n  const getVideoId = url => url.substr('https://www.youtube.com/watch?v='.length, url.length);\n\n  const customRenderThumb = children => children.map(item => {\n    const videoId = getVideoId(item.props.url);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getVideoThumb(videoId)\n    }, videoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      autoPlay: false,\n      className: classes.carousel,\n      emulateTouch: true,\n      showArrows: true,\n      showThumbs: true,\n      showStatus: false,\n      infiniteLoop: true,\n      renderItem: customRenderItem,\n      renderThumbs: customRenderThumb,\n      children: data.map(v => /*#__PURE__*/_jsxDEV(YoutubeSlide, {\n        url: v.videoUrl,\n        muted: true,\n        playing: false\n      }, v._id ? v._id : v.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CarouselVideo, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CarouselVideo;\nYoutubeSlide.propTypes = {\n  url: PropTypes.string,\n  isSelected: PropTypes.bool\n};\nCarouselVideo.propTypes = {\n  data: PropTypes.array\n};\nCarouselVideo.defaultProps = {\n  data: DUMMY_VIDEOS\n};\nexport default CarouselVideo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"YoutubeSlide\");\n$RefreshReg$(_c2, \"CarouselVideo\");","map":{"version":3,"sources":["/Users/luna.c/Documents/code/Cordelia_Portfolio/src/components/ProjectSection/CarouselVideo.jsx"],"names":["React","ReactPlayer","PropTypes","Carousel","Grid","makeStyles","DUMMY_VIDEOS","_id","videoUrl","useStyles","theme","carousel","margin","spacing","YoutubeSlide","url","isSelected","CarouselVideo","data","classes","customRenderItem","item","props","getVideoThumb","videoId","getVideoId","substr","length","customRenderThumb","children","map","v","id","propTypes","string","bool","array","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactPlayer from 'react-player';\nimport { PropTypes } from 'prop-types';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\nimport { Grid, makeStyles } from '@material-ui/core';\n\n\nconst DUMMY_VIDEOS = [\n    {\n     _id: '5fd025a181e2c80897c14ae1',\n     videoUrl: 'https://www.youtube.com/embed/AVn-Yjr7kDc'\n    }\n  ];\n\n  const useStyles = makeStyles(theme => ({\n    carousel: {\n    margin: theme.spacing(2)\n   }\n  }));\n\nconst YoutubeSlide = ({ url, isSelected }) => (\n    <ReactPlayer width=\"100%\" height=\"276px\" url={url} playing={isSelected} />\n  );\n  \n  const CarouselVideo = ({ data }) => {\n    const classes = useStyles();\n  \n    const customRenderItem = (item, props) => (\n      <item.type {...item.props} {...props} />\n    );\n  \n    const getVideoThumb = videoId =>`https://img.youtube.com/vi/${videoId}/default.jpg`;\n  \n    const getVideoId = url =>url.substr('https://www.youtube.com/watch?v='.length, url.length);\n  \n    const customRenderThumb = children =>\n      children.map(item => {\n        const videoId = getVideoId(item.props.url);\n    \n        return <img key={videoId} src={getVideoThumb(videoId)} />;\n    });\n  \n    return (\n      <Grid item md={6} xs={12}>\n        <Carousel\n         autoPlay={false}\n         className={classes.carousel}\n         emulateTouch={true}\n         showArrows={true}\n         showThumbs={true}\n         showStatus={false}\n         infiniteLoop={true}\n         renderItem={customRenderItem}\n         renderThumbs={customRenderThumb}\n       >\n        {data.map(v => (\n          <YoutubeSlide\n            url={v.videoUrl}\n            muted\n            playing={false}\n            key={v._id ? v._id : v.id}\n          />\n        ))}\n       </Carousel>\n     </Grid>\n    );\n   };\n  \n   YoutubeSlide.propTypes = {\n     url: PropTypes.string,\n     isSelected: PropTypes.bool\n   };\n  \n   CarouselVideo.propTypes = {\n     data: PropTypes.array\n   };\n  \n   CarouselVideo.defaultProps = {\n    data: DUMMY_VIDEOS\n   };\n\nexport default CarouselVideo\n"]},"metadata":{},"sourceType":"module"}