{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _PinterestBase2 = require('./PinterestBase');\n\nvar _PinterestBase3 = _interopRequireDefault(_PinterestBase2);\n\nvar _PinterestAnchor = require('./PinterestAnchor');\n\nvar _PinterestAnchor2 = _interopRequireDefault(_PinterestAnchor);\n\nvar _PinConst = require('../util/PinConst');\n\nvar _i18n = require('../util/i18n');\n\nvar _i18n2 = _interopRequireDefault(_i18n);\n\nvar _PinUtil = require('../util/PinUtil');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * This is a Pinterest Pin widget.\n *\n * <PinterestPinWidget pin=\"356417757988637350\" />\n *\n * @prop {string} pin - the id of the Pin to display\n * @prop {string} size - enum of { small, medium, large }: default: small\n * @prop {string} lang - language code for Pin: default: en\n * @state {Object} pin - the remote Pin data\n * @state {boolean} showingMenu - should we show the dropdown menu?\n * @state {boolean} playingGIF - should the GIF be playing?\n */\n\n\nvar PinterestPinWidget = function (_PinterestBase) {\n  _inherits(PinterestPinWidget, _PinterestBase);\n\n  function PinterestPinWidget(props) {\n    _classCallCheck(this, PinterestPinWidget);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PinterestPinWidget).call(this, props));\n\n    _this.logCount(_PinConst.COUNT_TYPES['PIN_' + props.size.toUpperCase()]);\n\n    _this.state = {\n      pin: null,\n      showingMenu: false,\n      playingGIF: false\n    };\n    (0, _PinUtil.bind)(_this, 'handleToggleMenu', 'handleToggleGIF', 'handlePinit');\n    return _this;\n  }\n  /**\n   * On mount, we fetch the remote Pin data for rendering\n   */\n\n\n  _createClass(PinterestPinWidget, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = _PinConst.URL.PIN + ('?base_scheme=http&pin_ids=' + this.props.pin);\n      (0, _PinUtil.fetch)(url, function (response) {\n        if (response && response.data && response.data[0]) {\n          _this2.setState({\n            pin: response.data[0]\n          });\n        } else {\n          console.error('Error in fetching Pin:', response);\n        }\n      });\n    }\n    /**\n     * Handle toggling visibility of the dropdown \"copyright\" menu\n     */\n\n  }, {\n    key: 'handleToggleMenu',\n    value: function handleToggleMenu() {\n      this.setState({\n        showingMenu: !this.state.showingMenu\n      });\n    }\n    /**\n     * Handle playing/pausing a GIF\n     */\n\n  }, {\n    key: 'handleToggleGIF',\n    value: function handleToggleGIF(evt) {\n      evt.preventDefault();\n      this.setState({\n        playingGIF: !this.state.playingGIF\n      });\n    }\n    /**\n     * Handle the clicking of the Pin It button to open the\n     * Pin create popup form\n     */\n\n  }, {\n    key: 'handlePinit',\n    value: function handlePinit(evt) {\n      evt.preventDefault();\n      var href = 'https://www.pinterest.com/pin/' + this.state.pin.id + '/repin/x/?guid=' + _PinConst.GUID;\n      window.open(href, 'pin' + new Date().getTime(), POPUP_OPTIONS.PIN_CREATE);\n      log({\n        type: 'embed_pin_repin' + this.logSize,\n        href: href\n      });\n    }\n    /**\n     * Get the url for the correctly sized remote image\n     * @returns {string} image url\n     */\n\n  }, {\n    key: 'getPinImage',\n    value: function getPinImage() {\n      var url = this.state.pin.images['237x'].url;\n\n      switch (this.props.size) {\n        case 'large':\n          return url.replace('237x', '600x');\n\n        case 'medium':\n          return url.replace('237x', '345x');\n\n        default:\n          return url;\n      }\n    }\n    /**\n     * Get the url for the correct Pin It button image\n     * @returns {string} image url\n     */\n\n  }, {\n    key: 'getButtonImage',\n    value: function getButtonImage() {\n      var base = 'https://s-passets.pinimg.com/images/pidgets/';\n      var resolution = (0, _PinUtil.getResolution)();\n      var url = void 0;\n\n      if (this.props.lang === 'ja') {\n        url = 'pinit_bg_ja_rect_red_20_' + resolution + '.png';\n      } else {\n        var size = this.props.size === 'small' ? 'small' : 'medium';\n        url = 'repin_' + size + '_' + resolution + '.png';\n      }\n\n      return {\n        backgroundImage: 'url(' + (base + url) + ')'\n      };\n    }\n    /**\n     * Render helper when attribution is available\n     */\n\n  }, {\n    key: 'renderAttribution',\n    value: function renderAttribution() {\n      var attr = this.state.pin.attribution;\n      var shouldRender = attr && attr.url && attr.author_name && attr.provider_icon_url;\n      return shouldRender && _react2.default.createElement('span', {\n        className: 'pin-widget-attrib'\n      }, _react2.default.createElement('img', {\n        className: 'pin-widget-attrib-icon',\n        src: attr.provider_icon_url\n      }), _react2.default.createElement('span', {\n        className: 'pin-widget-attrib'\n      }, _react2.default.createElement('a', {\n        className: 'pin-widget-attrib-anchor',\n        href: attr.url,\n        target: '_blank'\n      }, attr.author_name)));\n    }\n    /**\n     * Render helper for the description block, including optional\n     * attribution and stats counts for non-large Pin widget\n     */\n\n  }, {\n    key: 'renderDescription',\n    value: function renderDescription() {\n      var pin = this.state.pin;\n      return _react2.default.createElement('span', {\n        className: 'pin-widget-description'\n      }, pin.description, this.renderAttribution(), this.props.size !== 'large' && this.renderStats());\n    }\n    /**\n     * Render helper for the menu button and the optional dropdown menu\n     * for ability to report copyright infringement\n     */\n\n  }, {\n    key: 'renderMenu',\n    value: function renderMenu() {\n      var resolution = (0, _PinUtil.getResolution)();\n      var image = 'url(https://s-passets.pinimg.com/images/pidgets/menu_' + resolution + '.png)';\n      return _react2.default.createElement('span', null, _react2.default.createElement('a', {\n        className: 'pin-widget-menu',\n        style: {\n          backgroundImage: image\n        },\n        onClick: this.handleToggleMenu\n      }), this.state.showingMenu && _react2.default.createElement('span', {\n        className: 'pin-widget-menu-dropdown'\n      }, _react2.default.createElement(_PinterestAnchor2.default, {\n        href: 'https://www.pinterest.com/about/copyright/dmca-pin/',\n        log: 'embed_pin_report'\n      }, _i18n2.default.translate(\"Copyright issue\"))));\n    }\n    /**\n     * Render helper for rich metadata with fallback to the Pin's domain\n     */\n\n  }, {\n    key: 'renderMeta',\n    value: function renderMeta() {\n      var pin = this.state.pin;\n      var provider = pin.rich_metadata ? pin.rich_metadata.site_name : pin.domain;\n      var metadata = pin.rich_metadata;\n      return _react2.default.createElement('span', {\n        className: 'pin-widget-meta'\n      }, metadata && _react2.default.createElement('span', null, _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-meta-anchor',\n        href: metadata.url,\n        log: 'embed_pin_domain' + this.logSize\n      }, _react2.default.createElement('img', {\n        src: metadata.favicon_link,\n        alt: pin.rich_metadata.site_name,\n        title: pin.rich_metadata.site_name\n      })), _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-meta-anchor',\n        href: metadata.url,\n        log: 'embed_pin_domain' + this.logSize\n      }, _i18n2.default.translate(\"from <b>$1</b>\", provider))), !metadata && _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-meta-anchor',\n        href: 'https://' + pin.domain,\n        log: 'embed_pin_domain' + this.logSize\n      }, _i18n2.default.translate(\"from <b>$1</b>\", provider)), this.renderMenu());\n    }\n    /**\n     * Render helper for an embedded GIF\n     */\n\n  }, {\n    key: 'renderGIF',\n    value: function renderGIF(pin, image) {\n      var text = this.state.playingGIF ? 'II GIF' : '▶ GIF';\n      var src = this.state.playingGIF ? image.replace(/(237x|345x|600x)/, 'originals') : image;\n      return _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-pin-link',\n        href: 'https://www.pinterest.com/pin/' + pin.id + '/',\n        log: 'embed_pin_img' + this.logSize\n      }, _react2.default.createElement('img', {\n        className: 'pin-widget-pin-link-img',\n        alt: pin.description,\n        'data-pin-nopin': 'true',\n        src: src,\n        width: '100%'\n      }), _react2.default.createElement('i', {\n        className: 'pin-widget-gif',\n        onClick: this.handleToggleGIF\n      }, text));\n    }\n    /**\n     * Render helper for an embedded video\n     */\n\n  }, {\n    key: 'renderVideo',\n    value: function renderVideo(pin, image) {\n      var ratio = Math.floor(pin.images['237x'].height * 100 / pin.images['237x'].width);\n      var style = {\n        paddingBottom: ratio + '%'\n      };\n      return _react2.default.createElement('a', {\n        className: 'pin-widget-pin-link',\n        href: '//www.pinterest.com/pin/' + pin.id + '/repin/x/'\n      }, _react2.default.createElement('span', {\n        className: 'pin-widget-link-iframe',\n        style: style\n      }, _react2.default.createElement('iframe', {\n        src: pin.embed.src.replace(/autoplay=/, \"nerfAutoPlay=\"),\n        frameBorder: '0'\n      })));\n    }\n    /**\n     * Render helper for a Pin image\n     */\n\n  }, {\n    key: 'renderImage',\n    value: function renderImage(pin, image) {\n      return _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-pin-link',\n        href: 'https://www.pinterest.com/pin/' + pin.id + '/',\n        log: 'embed_pin_img' + this.logSize\n      }, _react2.default.createElement('img', {\n        className: 'pin-widget-pin-link-img',\n        alt: pin.description,\n        'data-pin-nopin': 'true',\n        src: image,\n        width: '100%'\n      }));\n    }\n    /**\n     * Render helper for image/video/GIF type media.\n     */\n\n  }, {\n    key: 'renderMedia',\n    value: function renderMedia() {\n      var pin = this.state.pin;\n      var image = this.getPinImage();\n\n      if (pin.embed) {\n        if (pin.embed.type === 'gif') {\n          return this.renderGIF(pin, image);\n        } else {\n          return this.renderVideo(pin, image);\n        }\n      } else {\n        return this.renderImage(pin, image);\n      }\n    }\n    /**\n     * Render helper for showing likes/repins only if the count is not zero\n     */\n\n  }, {\n    key: 'renderStats',\n    value: function renderStats() {\n      var pin = this.state.pin;\n      return _react2.default.createElement('span', {\n        className: 'pin-widget-stats'\n      }, pin.repin_count !== 0 && _react2.default.createElement('span', {\n        className: 'pin-widget-repin-count'\n      }, pin.repin_count), pin.like_count !== 0 && _react2.default.createElement('span', {\n        className: 'pin-widget-like-count'\n      }, pin.like_count));\n    }\n    /**\n     * Render helper when attribution is available\n     */\n\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader() {\n      return this.props.size === 'large' && _react2.default.createElement('span', {\n        className: 'pin-widget-header'\n      }, this.renderStats());\n    }\n    /**\n     * Render helper for the footer\n     */\n\n  }, {\n    key: 'renderFooter',\n    value: function renderFooter() {\n      var pin = this.state.pin;\n      var isJapan = this.props.lang === 'ja';\n      return _react2.default.createElement('span', {\n        className: 'pin-widget-footer'\n      }, _react2.default.createElement(_PinterestAnchor2.default, {\n        href: pin.pinner.profile_url,\n        log: 'embed_pin_pinner' + this.logSize\n      }, _react2.default.createElement('img', {\n        className: 'pin-widget-avatar',\n        alt: pin.pinner.full_name,\n        title: pin.pinner.full_name,\n        src: pin.pinner.image_small_url\n      })), _react2.default.createElement('span', null, _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-footer-text',\n        href: pin.pinner.profile_url,\n        log: 'embed_pin_pinner' + this.logSize\n      }, _react2.default.createElement('b', null, pin.pinner.full_name)), _react2.default.createElement(_PinterestAnchor2.default, {\n        className: 'pin-widget-footer-text',\n        href: '//www.pinterest.com' + pin.board.url,\n        log: 'embed_pin_board' + this.logSize\n      }, pin.board.name)));\n    }\n    /**\n     * Render helper for the entire Pin once the remote fetch has finished\n     */\n\n  }, {\n    key: 'renderPin',\n    value: function renderPin() {\n      this.logSize = this.props.size === 'small' ? '' : '_' + this.props.size;\n      return _react2.default.createElement('span', {\n        className: 'pinterest-widget--pin pin-widget--' + this.props.size,\n        style: this.props.style\n      }, _react2.default.createElement('i', {\n        className: 'pin-widget-repin',\n        style: this.getButtonImage(),\n        onClick: this.handlePinit\n      }), this.renderHeader(), this.renderMedia(), this.renderMeta(), this.renderDescription(), this.renderFooter());\n    }\n    /**\n     * Render method.\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.state.pin && this.renderPin();\n    }\n  }]);\n\n  return PinterestPinWidget;\n}(_PinterestBase3.default);\n\nexports.default = PinterestPinWidget;\nPinterestPinWidget.propTypes = {\n  pin: _react2.default.PropTypes.string.isRequired,\n  lang: _react2.default.PropTypes.string,\n  size: _react2.default.PropTypes.oneOf(['small', 'medium', 'large'])\n};\nPinterestPinWidget.defaultProps = {\n  pin: undefined,\n  size: 'small',\n  lang: 'en'\n};","map":{"version":3,"sources":["/Users/luna.c/Documents/code/Cordelia_Portfolio/node_modules/react-pinterest/lib/components/PinterestPinWidget.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_PinterestBase2","_PinterestBase3","_PinterestAnchor","_PinterestAnchor2","_PinConst","_i18n","_i18n2","_PinUtil","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","PinterestPinWidget","_PinterestBase","_this","getPrototypeOf","logCount","COUNT_TYPES","size","toUpperCase","state","pin","showingMenu","playingGIF","bind","componentDidMount","_this2","url","URL","PIN","fetch","response","data","setState","console","error","handleToggleMenu","handleToggleGIF","evt","preventDefault","handlePinit","href","id","GUID","window","open","Date","getTime","POPUP_OPTIONS","PIN_CREATE","log","type","logSize","getPinImage","images","replace","getButtonImage","base","resolution","getResolution","lang","backgroundImage","renderAttribution","attr","attribution","shouldRender","author_name","provider_icon_url","createElement","className","src","renderDescription","description","renderStats","renderMenu","image","style","onClick","translate","renderMeta","provider","rich_metadata","site_name","domain","metadata","favicon_link","alt","title","renderGIF","text","width","renderVideo","ratio","Math","floor","height","paddingBottom","embed","frameBorder","renderImage","renderMedia","repin_count","like_count","renderHeader","renderFooter","isJapan","pinner","profile_url","full_name","image_small_url","board","name","renderPin","render","propTypes","PropTypes","string","isRequired","oneOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _PinterestBase2 = require('./PinterestBase');\n\nvar _PinterestBase3 = _interopRequireDefault(_PinterestBase2);\n\nvar _PinterestAnchor = require('./PinterestAnchor');\n\nvar _PinterestAnchor2 = _interopRequireDefault(_PinterestAnchor);\n\nvar _PinConst = require('../util/PinConst');\n\nvar _i18n = require('../util/i18n');\n\nvar _i18n2 = _interopRequireDefault(_i18n);\n\nvar _PinUtil = require('../util/PinUtil');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * This is a Pinterest Pin widget.\n *\n * <PinterestPinWidget pin=\"356417757988637350\" />\n *\n * @prop {string} pin - the id of the Pin to display\n * @prop {string} size - enum of { small, medium, large }: default: small\n * @prop {string} lang - language code for Pin: default: en\n * @state {Object} pin - the remote Pin data\n * @state {boolean} showingMenu - should we show the dropdown menu?\n * @state {boolean} playingGIF - should the GIF be playing?\n */\nvar PinterestPinWidget = function (_PinterestBase) {\n    _inherits(PinterestPinWidget, _PinterestBase);\n\n    function PinterestPinWidget(props) {\n        _classCallCheck(this, PinterestPinWidget);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PinterestPinWidget).call(this, props));\n\n        _this.logCount(_PinConst.COUNT_TYPES['PIN_' + props.size.toUpperCase()]);\n        _this.state = { pin: null, showingMenu: false, playingGIF: false };\n        (0, _PinUtil.bind)(_this, 'handleToggleMenu', 'handleToggleGIF', 'handlePinit');\n        return _this;\n    }\n\n    /**\n     * On mount, we fetch the remote Pin data for rendering\n     */\n\n\n    _createClass(PinterestPinWidget, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            var url = _PinConst.URL.PIN + ('?base_scheme=http&pin_ids=' + this.props.pin);\n            (0, _PinUtil.fetch)(url, function (response) {\n                if (response && response.data && response.data[0]) {\n                    _this2.setState({ pin: response.data[0] });\n                } else {\n                    console.error('Error in fetching Pin:', response);\n                }\n            });\n        }\n\n        /**\n         * Handle toggling visibility of the dropdown \"copyright\" menu\n         */\n\n    }, {\n        key: 'handleToggleMenu',\n        value: function handleToggleMenu() {\n            this.setState({ showingMenu: !this.state.showingMenu });\n        }\n\n        /**\n         * Handle playing/pausing a GIF\n         */\n\n    }, {\n        key: 'handleToggleGIF',\n        value: function handleToggleGIF(evt) {\n            evt.preventDefault();\n            this.setState({ playingGIF: !this.state.playingGIF });\n        }\n\n        /**\n         * Handle the clicking of the Pin It button to open the\n         * Pin create popup form\n         */\n\n    }, {\n        key: 'handlePinit',\n        value: function handlePinit(evt) {\n            evt.preventDefault();\n            var href = 'https://www.pinterest.com/pin/' + this.state.pin.id + '/repin/x/?guid=' + _PinConst.GUID;\n            window.open(href, 'pin' + new Date().getTime(), POPUP_OPTIONS.PIN_CREATE);\n            log({ type: 'embed_pin_repin' + this.logSize, href: href });\n        }\n\n        /**\n         * Get the url for the correctly sized remote image\n         * @returns {string} image url\n         */\n\n    }, {\n        key: 'getPinImage',\n        value: function getPinImage() {\n            var url = this.state.pin.images['237x'].url;\n            switch (this.props.size) {\n                case 'large':\n                    return url.replace('237x', '600x');\n                case 'medium':\n                    return url.replace('237x', '345x');\n                default:\n                    return url;\n            }\n        }\n\n        /**\n         * Get the url for the correct Pin It button image\n         * @returns {string} image url\n         */\n\n    }, {\n        key: 'getButtonImage',\n        value: function getButtonImage() {\n            var base = 'https://s-passets.pinimg.com/images/pidgets/';\n            var resolution = (0, _PinUtil.getResolution)();\n            var url = void 0;\n            if (this.props.lang === 'ja') {\n                url = 'pinit_bg_ja_rect_red_20_' + resolution + '.png';\n            } else {\n                var size = this.props.size === 'small' ? 'small' : 'medium';\n                url = 'repin_' + size + '_' + resolution + '.png';\n            }\n            return { backgroundImage: 'url(' + (base + url) + ')' };\n        }\n\n        /**\n         * Render helper when attribution is available\n         */\n\n    }, {\n        key: 'renderAttribution',\n        value: function renderAttribution() {\n            var attr = this.state.pin.attribution;\n            var shouldRender = attr && attr.url && attr.author_name && attr.provider_icon_url;\n            return shouldRender && _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-attrib' },\n                _react2.default.createElement('img', { className: 'pin-widget-attrib-icon', src: attr.provider_icon_url }),\n                _react2.default.createElement(\n                    'span',\n                    { className: 'pin-widget-attrib' },\n                    _react2.default.createElement(\n                        'a',\n                        { className: 'pin-widget-attrib-anchor', href: attr.url, target: '_blank' },\n                        attr.author_name\n                    )\n                )\n            );\n        }\n\n        /**\n         * Render helper for the description block, including optional\n         * attribution and stats counts for non-large Pin widget\n         */\n\n    }, {\n        key: 'renderDescription',\n        value: function renderDescription() {\n            var pin = this.state.pin;\n            return _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-description' },\n                pin.description,\n                this.renderAttribution(),\n                this.props.size !== 'large' && this.renderStats()\n            );\n        }\n\n        /**\n         * Render helper for the menu button and the optional dropdown menu\n         * for ability to report copyright infringement\n         */\n\n    }, {\n        key: 'renderMenu',\n        value: function renderMenu() {\n            var resolution = (0, _PinUtil.getResolution)();\n            var image = 'url(https://s-passets.pinimg.com/images/pidgets/menu_' + resolution + '.png)';\n            return _react2.default.createElement(\n                'span',\n                null,\n                _react2.default.createElement('a', { className: 'pin-widget-menu', style: { backgroundImage: image }, onClick: this.handleToggleMenu }),\n                this.state.showingMenu && _react2.default.createElement(\n                    'span',\n                    { className: 'pin-widget-menu-dropdown' },\n                    _react2.default.createElement(\n                        _PinterestAnchor2.default,\n                        { href: 'https://www.pinterest.com/about/copyright/dmca-pin/', log: 'embed_pin_report' },\n                        _i18n2.default.translate(\"Copyright issue\")\n                    )\n                )\n            );\n        }\n\n        /**\n         * Render helper for rich metadata with fallback to the Pin's domain\n         */\n\n    }, {\n        key: 'renderMeta',\n        value: function renderMeta() {\n            var pin = this.state.pin;\n            var provider = pin.rich_metadata ? pin.rich_metadata.site_name : pin.domain;\n            var metadata = pin.rich_metadata;\n            return _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-meta' },\n                metadata && _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                        _PinterestAnchor2.default,\n                        { className: 'pin-widget-meta-anchor', href: metadata.url, log: 'embed_pin_domain' + this.logSize },\n                        _react2.default.createElement('img', { src: metadata.favicon_link, alt: pin.rich_metadata.site_name, title: pin.rich_metadata.site_name })\n                    ),\n                    _react2.default.createElement(\n                        _PinterestAnchor2.default,\n                        { className: 'pin-widget-meta-anchor', href: metadata.url, log: 'embed_pin_domain' + this.logSize },\n                        _i18n2.default.translate(\"from <b>$1</b>\", provider)\n                    )\n                ),\n                !metadata && _react2.default.createElement(\n                    _PinterestAnchor2.default,\n                    { className: 'pin-widget-meta-anchor', href: 'https://' + pin.domain, log: 'embed_pin_domain' + this.logSize },\n                    _i18n2.default.translate(\"from <b>$1</b>\", provider)\n                ),\n                this.renderMenu()\n            );\n        }\n\n        /**\n         * Render helper for an embedded GIF\n         */\n\n    }, {\n        key: 'renderGIF',\n        value: function renderGIF(pin, image) {\n            var text = this.state.playingGIF ? 'II GIF' : '▶ GIF';\n            var src = this.state.playingGIF ? image.replace(/(237x|345x|600x)/, 'originals') : image;\n            return _react2.default.createElement(\n                _PinterestAnchor2.default,\n                { className: 'pin-widget-pin-link', href: 'https://www.pinterest.com/pin/' + pin.id + '/', log: 'embed_pin_img' + this.logSize },\n                _react2.default.createElement('img', { className: 'pin-widget-pin-link-img', alt: pin.description, 'data-pin-nopin': 'true', src: src, width: '100%' }),\n                _react2.default.createElement(\n                    'i',\n                    { className: 'pin-widget-gif', onClick: this.handleToggleGIF },\n                    text\n                )\n            );\n        }\n\n        /**\n         * Render helper for an embedded video\n         */\n\n    }, {\n        key: 'renderVideo',\n        value: function renderVideo(pin, image) {\n            var ratio = Math.floor(pin.images['237x'].height * 100 / pin.images['237x'].width);\n            var style = { paddingBottom: ratio + '%' };\n            return _react2.default.createElement(\n                'a',\n                { className: 'pin-widget-pin-link', href: '//www.pinterest.com/pin/' + pin.id + '/repin/x/' },\n                _react2.default.createElement(\n                    'span',\n                    { className: 'pin-widget-link-iframe', style: style },\n                    _react2.default.createElement('iframe', { src: pin.embed.src.replace(/autoplay=/, \"nerfAutoPlay=\"), frameBorder: '0' })\n                )\n            );\n        }\n\n        /**\n         * Render helper for a Pin image\n         */\n\n    }, {\n        key: 'renderImage',\n        value: function renderImage(pin, image) {\n            return _react2.default.createElement(\n                _PinterestAnchor2.default,\n                { className: 'pin-widget-pin-link', href: 'https://www.pinterest.com/pin/' + pin.id + '/', log: 'embed_pin_img' + this.logSize },\n                _react2.default.createElement('img', { className: 'pin-widget-pin-link-img', alt: pin.description, 'data-pin-nopin': 'true', src: image, width: '100%' })\n            );\n        }\n\n        /**\n         * Render helper for image/video/GIF type media.\n         */\n\n    }, {\n        key: 'renderMedia',\n        value: function renderMedia() {\n            var pin = this.state.pin;\n            var image = this.getPinImage();\n            if (pin.embed) {\n                if (pin.embed.type === 'gif') {\n                    return this.renderGIF(pin, image);\n                } else {\n                    return this.renderVideo(pin, image);\n                }\n            } else {\n                return this.renderImage(pin, image);\n            }\n        }\n\n        /**\n         * Render helper for showing likes/repins only if the count is not zero\n         */\n\n    }, {\n        key: 'renderStats',\n        value: function renderStats() {\n            var pin = this.state.pin;\n            return _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-stats' },\n                pin.repin_count !== 0 && _react2.default.createElement(\n                    'span',\n                    { className: 'pin-widget-repin-count' },\n                    pin.repin_count\n                ),\n                pin.like_count !== 0 && _react2.default.createElement(\n                    'span',\n                    { className: 'pin-widget-like-count' },\n                    pin.like_count\n                )\n            );\n        }\n\n        /**\n         * Render helper when attribution is available\n         */\n\n    }, {\n        key: 'renderHeader',\n        value: function renderHeader() {\n            return this.props.size === 'large' && _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-header' },\n                this.renderStats()\n            );\n        }\n\n        /**\n         * Render helper for the footer\n         */\n\n    }, {\n        key: 'renderFooter',\n        value: function renderFooter() {\n            var pin = this.state.pin;\n            var isJapan = this.props.lang === 'ja';\n            return _react2.default.createElement(\n                'span',\n                { className: 'pin-widget-footer' },\n                _react2.default.createElement(\n                    _PinterestAnchor2.default,\n                    { href: pin.pinner.profile_url, log: 'embed_pin_pinner' + this.logSize },\n                    _react2.default.createElement('img', { className: 'pin-widget-avatar', alt: pin.pinner.full_name, title: pin.pinner.full_name, src: pin.pinner.image_small_url })\n                ),\n                _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                        _PinterestAnchor2.default,\n                        { className: 'pin-widget-footer-text', href: pin.pinner.profile_url, log: 'embed_pin_pinner' + this.logSize },\n                        _react2.default.createElement(\n                            'b',\n                            null,\n                            pin.pinner.full_name\n                        )\n                    ),\n                    _react2.default.createElement(\n                        _PinterestAnchor2.default,\n                        { className: 'pin-widget-footer-text', href: '//www.pinterest.com' + pin.board.url, log: 'embed_pin_board' + this.logSize },\n                        pin.board.name\n                    )\n                )\n            );\n        }\n\n        /**\n         * Render helper for the entire Pin once the remote fetch has finished\n         */\n\n    }, {\n        key: 'renderPin',\n        value: function renderPin() {\n            this.logSize = this.props.size === 'small' ? '' : '_' + this.props.size;\n            return _react2.default.createElement(\n                'span',\n                { className: 'pinterest-widget--pin pin-widget--' + this.props.size, style: this.props.style },\n                _react2.default.createElement('i', { className: 'pin-widget-repin', style: this.getButtonImage(), onClick: this.handlePinit }),\n                this.renderHeader(),\n                this.renderMedia(),\n                this.renderMeta(),\n                this.renderDescription(),\n                this.renderFooter()\n            );\n        }\n\n        /**\n         * Render method.\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            return this.state.pin && this.renderPin();\n        }\n    }]);\n\n    return PinterestPinWidget;\n}(_PinterestBase3.default);\n\nexports.default = PinterestPinWidget;\n\n\nPinterestPinWidget.propTypes = {\n    pin: _react2.default.PropTypes.string.isRequired,\n    lang: _react2.default.PropTypes.string,\n    size: _react2.default.PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nPinterestPinWidget.defaultProps = {\n    pin: undefined,\n    size: 'small',\n    lang: 'en'\n};"]},"metadata":{},"sourceType":"script"}